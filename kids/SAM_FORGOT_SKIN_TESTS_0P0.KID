KIDS Distribution saved on Sep 01, 2015@11:48:34
T2 
**KIDS**:SAM FORGOT SKIN TESTS 0.0^

**INSTALL NAME**
SAM FORGOT SKIN TESTS 0.0
"BLD",4548,0)
SAM FORGOT SKIN TESTS 0.0^^0^3150901^y
"BLD",4548,4,0)
^9.64PA^9000010.12^2
"BLD",4548,4,9000010.12,0)
9000010.12
"BLD",4548,4,9000010.12,222)
y^y^f^^^^n
"BLD",4548,4,9999999.28,0)
9999999.28
"BLD",4548,4,9999999.28,222)
y^y^f^^n^^y^o^n
"BLD",4548,4,"B",9000010.12,9000010.12)

"BLD",4548,4,"B",9999999.28,9999999.28)

"BLD",4548,6.3)
3
"BLD",4548,"KRN",0)
^9.67PA^9002226^21
"BLD",4548,"KRN",.4,0)
.4
"BLD",4548,"KRN",.401,0)
.401
"BLD",4548,"KRN",.402,0)
.402
"BLD",4548,"KRN",.403,0)
.403
"BLD",4548,"KRN",.5,0)
.5
"BLD",4548,"KRN",.84,0)
.84
"BLD",4548,"KRN",3.6,0)
3.6
"BLD",4548,"KRN",3.8,0)
3.8
"BLD",4548,"KRN",9.2,0)
9.2
"BLD",4548,"KRN",9.8,0)
9.8
"BLD",4548,"KRN",19,0)
19
"BLD",4548,"KRN",19.1,0)
19.1
"BLD",4548,"KRN",101,0)
101
"BLD",4548,"KRN",409.61,0)
409.61
"BLD",4548,"KRN",771,0)
771
"BLD",4548,"KRN",779.2,0)
779.2
"BLD",4548,"KRN",870,0)
870
"BLD",4548,"KRN",8989.51,0)
8989.51
"BLD",4548,"KRN",8989.52,0)
8989.52
"BLD",4548,"KRN",8994,0)
8994
"BLD",4548,"KRN",9002226,0)
9002226
"BLD",4548,"KRN","B",.4,.4)

"BLD",4548,"KRN","B",.401,.401)

"BLD",4548,"KRN","B",.402,.402)

"BLD",4548,"KRN","B",.403,.403)

"BLD",4548,"KRN","B",.5,.5)

"BLD",4548,"KRN","B",.84,.84)

"BLD",4548,"KRN","B",3.6,3.6)

"BLD",4548,"KRN","B",3.8,3.8)

"BLD",4548,"KRN","B",9.2,9.2)

"BLD",4548,"KRN","B",9.8,9.8)

"BLD",4548,"KRN","B",19,19)

"BLD",4548,"KRN","B",19.1,19.1)

"BLD",4548,"KRN","B",101,101)

"BLD",4548,"KRN","B",409.61,409.61)

"BLD",4548,"KRN","B",771,771)

"BLD",4548,"KRN","B",779.2,779.2)

"BLD",4548,"KRN","B",870,870)

"BLD",4548,"KRN","B",8989.51,8989.51)

"BLD",4548,"KRN","B",8989.52,8989.52)

"BLD",4548,"KRN","B",8994,8994)

"BLD",4548,"KRN","B",9002226,9002226)

"DATA",9999999.28,1,0)
TINE^20^1^^^^^^^^86585
"DATA",9999999.28,2,0)
PPD^21^^^^^^^^^86580
"DATA",9999999.28,3,0)
COCCI^23^1^^^^^^^^86490
"DATA",9999999.28,4,0)
SCHICK^22^1
"DATA",9999999.28,5,0)
MONO-VAC^24^1^^^^^^^^86585
"DATA",9999999.28,6,0)
TETANUS^25^
"DATA",9999999.28,7,0)
CANDIDA^26^1
"DATA",9999999.28,8,0)
CHLAMYDIA^27^1
"DATA",9999999.28,9,0)
MUMPS^28^1
"FIA",9000010.12)
V SKIN TEST
"FIA",9000010.12,0)
^AUPNVSK(
"FIA",9000010.12,0,0)
9000010.12AIP
"FIA",9000010.12,0,1)
y^y^f^^^^n
"FIA",9000010.12,0,10)

"FIA",9000010.12,0,11)

"FIA",9000010.12,0,"RLRO")

"FIA",9000010.12,9000010.12)
0
"FIA",9999999.28)
SKIN TEST
"FIA",9999999.28,0)
^AUTTSK(
"FIA",9999999.28,0,0)
9999999.28I
"FIA",9999999.28,0,1)
y^y^f^^n^^y^o^n
"FIA",9999999.28,0,10)

"FIA",9999999.28,0,11)

"FIA",9999999.28,0,"RLRO")

"FIA",9999999.28,9999999.28)
0
"IX",9000010.12,9000010.12,"ACR",0)
9000010.12^ACR^Clinical Reminders index.^MU^^R^IR^I^9000010.12^^^^^A
"IX",9000010.12,9000010.12,"ACR",.1,0)
^^8^8^3130706
"IX",9000010.12,9000010.12,"ACR",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",9000010.12,9000010.12,"ACR",.1,2,0)
all patients with a particular skin test and one for finding all
"IX",9000010.12,9000010.12,"ACR",.1,3,0)
the skin tests a patient has.
"IX",9000010.12,9000010.12,"ACR",.1,4,0)
The indexes are stored in the Clinical Reminders index global as:
"IX",9000010.12,9000010.12,"ACR",.1,5,0)
 ^PXRMINDX(9000010.12,"IP",SKIN TEST,DFN,VISIT DATE,DAS) and
"IX",9000010.12,9000010.12,"ACR",.1,6,0)
 ^PXRMINDX(9000010.12,"PI",DFN,SKIN TEST,VISIT DATE,DAS)
"IX",9000010.12,9000010.12,"ACR",.1,7,0)
respectively.
"IX",9000010.12,9000010.12,"ACR",.1,8,0)
For all the details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",9000010.12,9000010.12,"ACR",1)
D SVFILE^PXPXRM(9000010.12,.X,.DA)
"IX",9000010.12,9000010.12,"ACR",2)
D KVFILE^PXPXRM(9000010.12,.X,.DA)
"IX",9000010.12,9000010.12,"ACR",2.5)
K ^PXRMINDX(9000010.12)
"IX",9000010.12,9000010.12,"ACR",11.1,0)
^.114IA^3^3
"IX",9000010.12,9000010.12,"ACR",11.1,1,0)
1^F^9000010.12^.01^^1^F
"IX",9000010.12,9000010.12,"ACR",11.1,2,0)
2^F^9000010.12^.02^^2^F
"IX",9000010.12,9000010.12,"ACR",11.1,3,0)
3^F^9000010.12^.03^^3^F
"MBREQ")
0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"SEC","^DIC",9000010.12,9000010.12,0,"AUDIT")
M
"SEC","^DIC",9000010.12,9000010.12,0,"DD")
@
"SEC","^DIC",9000010.12,9000010.12,0,"DEL")
M
"SEC","^DIC",9000010.12,9000010.12,0,"LAYGO")
M
"SEC","^DIC",9000010.12,9000010.12,0,"RD")
M
"SEC","^DIC",9000010.12,9000010.12,0,"WR")
M
"SEC","^DIC",9999999.28,9999999.28,0,"AUDIT")
@
"SEC","^DIC",9999999.28,9999999.28,0,"DD")
@
"SEC","^DIC",9999999.28,9999999.28,0,"DEL")
@
"SEC","^DIC",9999999.28,9999999.28,0,"LAYGO")
@
"SEC","^DIC",9999999.28,9999999.28,0,"RD")

"SEC","^DIC",9999999.28,9999999.28,0,"WR")
@
"VER")
8.0^22.0
"^DD",9000010.12,9000010.12,0)
FIELD^^81203^32
"^DD",9000010.12,9000010.12,0,"DT")
3080905
"^DD",9000010.12,9000010.12,0,"IX","AA",9000010.12,.03)

"^DD",9000010.12,9000010.12,0,"IX","AATOO",9000010.12,.01)

"^DD",9000010.12,9000010.12,0,"IX","AATOO2",9000010.12,.02)

"^DD",9000010.12,9000010.12,0,"IX","AC",9000010.12,.02)

"^DD",9000010.12,9000010.12,0,"IX","AD",9000010.12,.03)

"^DD",9000010.12,9000010.12,0,"IX","AE",9000010.12,.05)

"^DD",9000010.12,9000010.12,0,"IX","APT",9000010.12,1208)

"^DD",9000010.12,9000010.12,0,"IX","AQ",9000010.12,.05)

"^DD",9000010.12,9000010.12,0,"IX","AQTOO",9000010.12,.01)

"^DD",9000010.12,9000010.12,0,"IX","AS",9000010.12,1207)

"^DD",9000010.12,9000010.12,0,"IX","AV10",9000010.12,.03)

"^DD",9000010.12,9000010.12,0,"IX","AV9",9000010.12,.01)

"^DD",9000010.12,9000010.12,0,"IX","AZ1",9000010.12,.04)

"^DD",9000010.12,9000010.12,0,"IX","AZ2",9000010.12,.05)

"^DD",9000010.12,9000010.12,0,"IX","B",9000010.12,.01)

"^DD",9000010.12,9000010.12,0,"NM","V SKIN TEST")

"^DD",9000010.12,9000010.12,0,"PT",9000010.12,1208)

"^DD",9000010.12,9000010.12,0,"PT",9001005.05101,.02)

"^DD",9000010.12,9000010.12,0,"PT",9002014.05101,.02)

"^DD",9000010.12,9000010.12,0,"VRPK")
IHS PCC SUITE
"^DD",9000010.12,9000010.12,.01,0)
SKIN TEST^R*P9999999.28'^AUTTSK(^0;1^S DIC("S")="I $P(^(0),U,3)'=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.12,9000010.12,.01,1,0)
^.1^^-1
"^DD",9000010.12,9000010.12,.01,1,1,0)
9000010.12^B
"^DD",9000010.12,9000010.12,.01,1,1,1)
S ^AUPNVSK("B",$E(X,1,30),DA)=""
"^DD",9000010.12,9000010.12,.01,1,1,2)
K ^AUPNVSK("B",$E(X,1,30),DA)
"^DD",9000010.12,9000010.12,.01,1,2,0)
9000010.12^AV9^MUMPS
"^DD",9000010.12,9000010.12,.01,1,2,1)
S:$D(APCDLOOK) DIC("DR")=""
"^DD",9000010.12,9000010.12,.01,1,2,2)
Q
"^DD",9000010.12,9000010.12,.01,1,3,0)
9000010.12^AATOO^MUMPS
"^DD",9000010.12,9000010.12,.01,1,3,1)
I $P(^AUPNVSK(DA,0),U,2)]"",$P(^(0),U,3)]"" S ^AUPNVSK("AA",$P(^AUPNVSK(DA,0),U,2),X,(9999999-$P(+^AUPNVSIT($P(^AUPNVSK(DA,0),U,3),0),".",1)),DA)=""
"^DD",9000010.12,9000010.12,.01,1,3,2)
I $P(^AUPNVSK(DA,0),U,2)]"",$P(^(0),U,3)]"" K ^AUPNVSK("AA",$P(^AUPNVSK(DA,0),U,2),X,(9999999-$P(+^AUPNVSIT($P(^AUPNVSK(DA,0),U,3),0),".",1)),DA)
"^DD",9000010.12,9000010.12,.01,1,3,"%D",0)
^^4^4^2950901^
"^DD",9000010.12,9000010.12,.01,1,3,"%D",1,0)
This cross-reference is used for searches in sequence by patient, Skin
"^DD",9000010.12,9000010.12,.01,1,3,"%D",2,0)
test pointer, inverted Visit date, and internal entry number.
"^DD",9000010.12,9000010.12,.01,1,3,"%D",3,0)
 
"^DD",9000010.12,9000010.12,.01,1,3,"%D",4,0)
    "AA",PATIENT,SKIN TEST,VISIT,DA
"^DD",9000010.12,9000010.12,.01,1,4,0)
9000010.12^AQTOO^MUMPS
"^DD",9000010.12,9000010.12,.01,1,4,1)
D AQS1^AUPNCIXL
"^DD",9000010.12,9000010.12,.01,1,4,2)
D AQSKILL1^AUPNCIXL
"^DD",9000010.12,9000010.12,.01,1,4,"%D",0)
^^1^1^2940127^^
"^DD",9000010.12,9000010.12,.01,1,4,"%D",1,0)
This is a "Q-Man" cross-reference.
"^DD",9000010.12,9000010.12,.01,1,4,"DT")
2910318
"^DD",9000010.12,9000010.12,.01,3)
Enter the Skin Test that was given to the patient.
"^DD",9000010.12,9000010.12,.01,12)
Allow only active Skin Test types to be selected.
"^DD",9000010.12,9000010.12,.01,12.1)
S DIC("S")="I $P(^(0),U,3)'=1"
"^DD",9000010.12,9000010.12,.01,21,0)
^^2^2^2951024^^^
"^DD",9000010.12,9000010.12,.01,21,1,0)
This is the type of Skin Test that was given to the patient at the
"^DD",9000010.12,9000010.12,.01,21,2,0)
encounter.  
"^DD",9000010.12,9000010.12,.01,23,0)
^^3^3^2960924^
"^DD",9000010.12,9000010.12,.01,23,1,0)
Only active Skin Test entries in the Skin Test File (#9999999.28) are
"^DD",9000010.12,9000010.12,.01,23,2,0)
 selectable.
"^DD",9000010.12,9000010.12,.01,23,3,0)
APCDALVR Variable = APCDALVR("APCDTSK")
"^DD",9000010.12,9000010.12,.01,"AUDIT")
n
"^DD",9000010.12,9000010.12,.01,"DT")
2950901
"^DD",9000010.12,9000010.12,.02,0)
PATIENT NAME^RP9000001'I^AUPNPAT(^0;2^Q
"^DD",9000010.12,9000010.12,.02,1,0)
^.1
"^DD",9000010.12,9000010.12,.02,1,1,0)
9000010.12^AC
"^DD",9000010.12,9000010.12,.02,1,1,1)
S ^AUPNVSK("AC",$E(X,1,30),DA)=""
"^DD",9000010.12,9000010.12,.02,1,1,2)
K ^AUPNVSK("AC",$E(X,1,30),DA)
"^DD",9000010.12,9000010.12,.02,1,2,0)
9000010.12^AATOO2^MUMPS
"^DD",9000010.12,9000010.12,.02,1,2,1)
I $P(^AUPNVSK(DA,0),U,3)]"" S ^AUPNVSK("AA",X,+^AUPNVSK(DA,0),(9999999-$P(+^AUPNVSIT($P(^AUPNVSK(DA,0),U,3),0),".",1)),DA)=""
"^DD",9000010.12,9000010.12,.02,1,2,2)
I $P(^AUPNVSK(DA,0),U,3)]"" K ^AUPNVSK("AA",X,+^AUPNVSK(DA,0),(9999999-$P(+^AUPNVSIT($P(^AUPNVSK(DA,0),U,3),0),".",1)),DA)
"^DD",9000010.12,9000010.12,.02,1,2,"%D",0)
^^2^2^2940127^
"^DD",9000010.12,9000010.12,.02,1,2,"%D",1,0)
This is a Health Summary cross-reference.
"^DD",9000010.12,9000010.12,.02,1,2,"%D",2,0)
"AA",PATIENT,SKIN TEST, VISIT,DA
"^DD",9000010.12,9000010.12,.02,23,0)
^^1^1^2960924^
"^DD",9000010.12,9000010.12,.02,23,1,0)
APCDALVR Variable = APCDALVR("APCDPAT")
"^DD",9000010.12,9000010.12,.02,"DT")
2880405
"^DD",9000010.12,9000010.12,.03,0)
VISIT^R*P9000010'I^AUPNVSIT(^0;3^S DIC("S")="I $P(^(0),U,5)=$P(^AUPNVSK(DA,0),U,2)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.12,9000010.12,.03,1,0)
^.1
"^DD",9000010.12,9000010.12,.03,1,1,0)
9000010.12^AD
"^DD",9000010.12,9000010.12,.03,1,1,1)
S ^AUPNVSK("AD",$E(X,1,30),DA)=""
"^DD",9000010.12,9000010.12,.03,1,1,2)
K ^AUPNVSK("AD",$E(X,1,30),DA)
"^DD",9000010.12,9000010.12,.03,1,1,"%D",0)
^^1^1^2950901^
"^DD",9000010.12,9000010.12,.03,1,1,"%D",1,0)
This cross-reference allows look-up of entries by patient name.
"^DD",9000010.12,9000010.12,.03,1,2,0)
9000010.12^AA^MUMPS
"^DD",9000010.12,9000010.12,.03,1,2,1)
Q:$P(^AUPNVSK(DA,0),U,2)=""  S ^AUPNVSK("AA",$P(^AUPNVSK(DA,0),U,2),+^AUPNVSK(DA,0),(9999999-$P(+^AUPNVSIT(X,0),".",1)),DA)=""
"^DD",9000010.12,9000010.12,.03,1,2,2)
Q:$P(^AUPNVSK(DA,0),U,2)=""  K ^AUPNVSK("AA",$P(^AUPNVSK(DA,0),U,2),+^AUPNVSK(DA,0),(9999999-$P(+^AUPNVSIT(X,0),".",1)),DA)
"^DD",9000010.12,9000010.12,.03,1,2,"%D",0)
^^4^4^2950901^
"^DD",9000010.12,9000010.12,.03,1,2,"%D",1,0)
This cross-reference is used for searches in sequence by patient, skin
"^DD",9000010.12,9000010.12,.03,1,2,"%D",2,0)
test pointer, inverted visit date, and internal entry number.
"^DD",9000010.12,9000010.12,.03,1,2,"%D",3,0)
 
"^DD",9000010.12,9000010.12,.03,1,2,"%D",4,0)
    "AA",PATIENT,SKIN TEST,VISIT,DA
"^DD",9000010.12,9000010.12,.03,1,3,0)
9000010.12^AV10^MUMPS
"^DD",9000010.12,9000010.12,.03,1,3,1)
D ADD^AUPNVSIT
"^DD",9000010.12,9000010.12,.03,1,3,2)
D SUB^AUPNVSIT
"^DD",9000010.12,9000010.12,.03,1,3,"%D",0)
^^2^2^2940127^
"^DD",9000010.12,9000010.12,.03,1,3,"%D",1,0)
This cross-reference is for adding and subtracting from the dependent
"^DD",9000010.12,9000010.12,.03,1,3,"%D",2,0)
entry count in the VISIT file.
"^DD",9000010.12,9000010.12,.03,3)
Enter the visit date/time for the encounter where the skin test was done.
"^DD",9000010.12,9000010.12,.03,12)
VISIT MUST BE FOR CURRENT PATIENT
"^DD",9000010.12,9000010.12,.03,12.1)
S DIC("S")="I $P(^(0),U,5)=$P(^AUPNVSK(DA,0),U,2)"
"^DD",9000010.12,9000010.12,.03,21,0)
^^2^2^2950901^
"^DD",9000010.12,9000010.12,.03,21,1,0)
This is the encounter defined in the Visit file that represents when and
"^DD",9000010.12,9000010.12,.03,21,2,0)
where the skin test was done.
"^DD",9000010.12,9000010.12,.03,23,0)
^^3^3^2960924^
"^DD",9000010.12,9000010.12,.03,23,1,0)
This is a pointer to the Visit File (#9000010).  This field is stuffed by
"^DD",9000010.12,9000010.12,.03,23,2,0)
the applications.  No editing is allowed.
"^DD",9000010.12,9000010.12,.03,23,3,0)
APCDALVR Variable = APCDALVR("APCDVSIT")
"^DD",9000010.12,9000010.12,.03,"DT")
2861111
"^DD",9000010.12,9000010.12,.04,0)
RESULTS^SX^P:POSITIVE;N:NEGATIVE;D:DOUBTFUL;O:NO TAKE;^0;4^I X="N",$P(^AUPNVSK(DA,0),U,5)]"",$P(^AUPNVSK(DA,0),U,5)>14 K X
"^DD",9000010.12,9000010.12,.04,1,0)
^.1^^0
"^DD",9000010.12,9000010.12,.04,1,1,0)
9000010.12^AZ1^MUMPS
"^DD",9000010.12,9000010.12,.04,1,1,1)
Q
"^DD",9000010.12,9000010.12,.04,1,1,2)
Q
"^DD",9000010.12,9000010.12,.04,3)
Enter whether the results were positive, negative, doubtful or no take, if known.
"^DD",9000010.12,9000010.12,.04,10)
082/SKREST
"^DD",9000010.12,9000010.12,.04,21,0)
^.001^1^1^3100924^^
"^DD",9000010.12,9000010.12,.04,21,1,0)
This is where a provider can designate the results of the skin test.
"^DD",9000010.12,9000010.12,.04,23,0)
^.001^1^1^3100924^^
"^DD",9000010.12,9000010.12,.04,23,1,0)
APCDALVR Variable = APCDALVR("APCDTRES")
"^DD",9000010.12,9000010.12,.04,"DT")
2940127
"^DD",9000010.12,9000010.12,.05,0)
READING^NJ2,0X^^0;5^K:+X'=X!(X>40)!(X<0)!(X?.E1"."1N.N) X I $D(X),X>14,$P(^AUPNVSK(DA,0),U,4)]"",$P(^AUPNVSK(DA,0),U,4)'="P" K X
"^DD",9000010.12,9000010.12,.05,1,0)
^.1^^-1
"^DD",9000010.12,9000010.12,.05,1,1,0)
9000010.12^AZ2^MUMPS
"^DD",9000010.12,9000010.12,.05,1,1,1)
Q
"^DD",9000010.12,9000010.12,.05,1,1,2)
Q
"^DD",9000010.12,9000010.12,.05,1,2,0)
9000010.12^AE
"^DD",9000010.12,9000010.12,.05,1,2,1)
S ^AUPNVSK("AE",$E(X,1,30),DA)=""
"^DD",9000010.12,9000010.12,.05,1,2,2)
K ^AUPNVSK("AE",$E(X,1,30),DA)
"^DD",9000010.12,9000010.12,.05,1,2,"%D",0)
^^4^4^2950901^
"^DD",9000010.12,9000010.12,.05,1,2,"%D",1,0)
This cross-reference searches on the results of skin tests across all
"^DD",9000010.12,9000010.12,.05,1,2,"%D",2,0)
patients.
"^DD",9000010.12,9000010.12,.05,1,2,"%D",3,0)
 
"^DD",9000010.12,9000010.12,.05,1,2,"%D",4,0)
   "AE",READING,DA
"^DD",9000010.12,9000010.12,.05,1,3,0)
9000010.12^AQ^MUMPS
"^DD",9000010.12,9000010.12,.05,1,3,1)
D AQS^AUPNCIXL
"^DD",9000010.12,9000010.12,.05,1,3,2)
D AQSKILL^AUPNCIXL
"^DD",9000010.12,9000010.12,.05,1,3,"%D",0)
^^1^1^2940127^
"^DD",9000010.12,9000010.12,.05,1,3,"%D",1,0)
This is a "Q-Man" cross-reference.
"^DD",9000010.12,9000010.12,.05,1,3,"DT")
2910318
"^DD",9000010.12,9000010.12,.05,3)
TYPE A WHOLE NUMBER BETWEEN 0 AND 40, IF THE RESULT IS NEGATIVE READING MUST BE <15
"^DD",9000010.12,9000010.12,.05,10)
082/SKREAD
"^DD",9000010.12,9000010.12,.05,21,0)
^.001^1^1^3100924^^
"^DD",9000010.12,9000010.12,.05,21,1,0)
Enter the value representing the reading of the skin test.
"^DD",9000010.12,9000010.12,.05,23,0)
^.001^1^1^3100924^^
"^DD",9000010.12,9000010.12,.05,23,1,0)
APCDALVR Variable = APCDALVR("APCDTREA")
"^DD",9000010.12,9000010.12,.05,"DT")
3070924
"^DD",9000010.12,9000010.12,.06,0)
DATE READ^DX^^0;6^S %DT="EX" D ^%DT S X=Y K:X>DT!(X<AUPNDOB) X I $D(X),AUPNDOD,X>AUPNDOD K X
"^DD",9000010.12,9000010.12,.06,3)
TYPE A DATE BETWEEN DOB AND TODAY
"^DD",9000010.12,9000010.12,.06,23,0)
^^1^1^2960924^
"^DD",9000010.12,9000010.12,.06,23,1,0)
APCDALVR Variable = APCDALVR("APCDTDR")
"^DD",9000010.12,9000010.12,.06,"DT")
2880322
"^DD",9000010.12,9000010.12,.08,0)
TEST READER^P200'^VA(200,^0;8^Q
"^DD",9000010.12,9000010.12,.08,3)
Select the name of the person who read the result of this test.
"^DD",9000010.12,9000010.12,.08,"DT")
3031215
"^DD",9000010.12,9000010.12,.09,0)
INJECTION SITE^S^L:LEFT FOREARM;R:RIGHT FOREARM;^0;9^Q
"^DD",9000010.12,9000010.12,.09,3)
Select the site of the skin test.
"^DD",9000010.12,9000010.12,.09,"DT")
3080905
"^DD",9000010.12,9000010.12,.11,0)
VOLUME^NJ4,2^^0;11^K:+X'=X!(X>5)!(X<0)!(X?.E1"."3N.N) X
"^DD",9000010.12,9000010.12,.11,3)
Type a Number between 0 and 5, 2 Decimal Digits
"^DD",9000010.12,9000010.12,.11,"DT")
3050826
"^DD",9000010.12,9000010.12,.14,0)
LOT NUMBER^P9999999.41'^AUTTIML(^0;14^Q
"^DD",9000010.12,9000010.12,.14,"DT")
3150406
"^DD",9000010.12,9000010.12,1201,0)
EVENT DATE AND TIME^D^^12;1^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",9000010.12,9000010.12,1201,3)
Enter the date and time the skin test was done.
"^DD",9000010.12,9000010.12,1201,21,0)
^^9^9^2950901^^^
"^DD",9000010.12,9000010.12,1201,21,1,0)
This is the date and time the skin test was performed.  This date and time may
"^DD",9000010.12,9000010.12,1201,21,2,0)
be different from the visit date and time.  For example, for clinic appointment
"^DD",9000010.12,9000010.12,1201,21,3,0)
visits, the visit date and time is the date and time of the appointment, not
"^DD",9000010.12,9000010.12,1201,21,4,0)
the time the provider performed the clinical event.
"^DD",9000010.12,9000010.12,1201,21,5,0)
 
"^DD",9000010.12,9000010.12,1201,21,6,0)
The date may be an imprecise date.
"^DD",9000010.12,9000010.12,1201,21,7,0)
 
"^DD",9000010.12,9000010.12,1201,21,8,0)
Date and time may be within 30 days before or after the visit date, with the
"^DD",9000010.12,9000010.12,1201,21,9,0)
restriction the date cannot be a future date.
"^DD",9000010.12,9000010.12,1201,23,0)
^^13^13^2960924^
"^DD",9000010.12,9000010.12,1201,23,1,0)
The PCE User Interface, which allows manual entry of data, will be the primary
"^DD",9000010.12,9000010.12,1201,23,2,0)
source of the event date and time.  The event date prompt defaults to the visit
"^DD",9000010.12,9000010.12,1201,23,3,0)
date and the time is entered to reflect the actual time the skin test was done. 
"^DD",9000010.12,9000010.12,1201,23,4,0)
The event date does not have to be the visit date, but it must be within 30
"^DD",9000010.12,9000010.12,1201,23,5,0)
days before or after the visit, and not be a future date.
"^DD",9000010.12,9000010.12,1201,23,6,0)
 
"^DD",9000010.12,9000010.12,1201,23,7,0)
If a user wants to enter an historical skin test, the user should use the
"^DD",9000010.12,9000010.12,1201,23,8,0)
Historical Encounter entry action to document the historical skin test. 
"^DD",9000010.12,9000010.12,1201,23,9,0)
Historical entries will not be eligible for workload credit.
"^DD",9000010.12,9000010.12,1201,23,10,0)
 
"^DD",9000010.12,9000010.12,1201,23,11,0)
PCE data sources for automatic (scanning) data capture will be blank unless the
"^DD",9000010.12,9000010.12,1201,23,12,0)
event date and time are passed to PCE for filing.
"^DD",9000010.12,9000010.12,1201,23,13,0)
APCDALVR Variable = APCDALVR("APCDTCDT")
"^DD",9000010.12,9000010.12,1201,"DT")
2940401
"^DD",9000010.12,9000010.12,1202,0)
ORDERING PROVIDER^*P200'X^VA(200,^12;2^S DIC("S")="I $D(^VA(200,""AK.PROVIDER"",$P(^(0),U)))",D="AK.PROVIDER" D IX^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.12,9000010.12,1202,3)
Enter the provider who ordered this skin test.
"^DD",9000010.12,9000010.12,1202,12)
Must be a Provider.
"^DD",9000010.12,9000010.12,1202,12.1)
S DIC("S")="I $D(^VA(200,""AK.PROVIDER"",$P(^(0),U)))"
"^DD",9000010.12,9000010.12,1202,21,0)
^^1^1^2950901^^
"^DD",9000010.12,9000010.12,1202,21,1,0)
This field can be used to document the provider who ordered the skin test.
"^DD",9000010.12,9000010.12,1202,23,0)
^^2^2^2960924^
"^DD",9000010.12,9000010.12,1202,23,1,0)
The person entered here must hold the "AK.PROVIDER" security key.
"^DD",9000010.12,9000010.12,1202,23,2,0)
APCDALVR Variable = APCDALVR("APCDTPRV")
"^DD",9000010.12,9000010.12,1202,"DT")
2940426
"^DD",9000010.12,9000010.12,1203,0)
CLINIC^P40.7'^DIC(40.7,^12;3^Q
"^DD",9000010.12,9000010.12,1203,23,0)
^^1^1^2960924^
"^DD",9000010.12,9000010.12,1203,23,1,0)
APCDALVR Variable = APCDALVR("APCDTCLN")
"^DD",9000010.12,9000010.12,1203,"DT")
2940401
"^DD",9000010.12,9000010.12,1204,0)
ENCOUNTER PROVIDER^P200'^VA(200,^12;4^Q
"^DD",9000010.12,9000010.12,1204,3)
Enter the provider who gave the skin test.
"^DD",9000010.12,9000010.12,1204,12)
Must be a Provider.
"^DD",9000010.12,9000010.12,1204,12.1)
S DIC("S")="I $D(^VA(200,""AK.PROVIDER"",$P(^(0),U)))"
"^DD",9000010.12,9000010.12,1204,21,0)
^^1^1^2950901^^^
"^DD",9000010.12,9000010.12,1204,21,1,0)
This is the provider who gave the skin test.
"^DD",9000010.12,9000010.12,1204,23,0)
^^3^3^2960924^
"^DD",9000010.12,9000010.12,1204,23,1,0)
This person can be any person in the new person file.  The person does not have
"^DD",9000010.12,9000010.12,1204,23,2,0)
to hold the "AK.PROVIDER" security key.
"^DD",9000010.12,9000010.12,1204,23,3,0)
APCDALVR Variable = APCDALVR("APCDTEPR")
"^DD",9000010.12,9000010.12,1204,"DT")
2941219
"^DD",9000010.12,9000010.12,1205,0)
HOSPITAL LOCATION^P44'^SC(^12;5^Q
"^DD",9000010.12,9000010.12,1205,3)
Enter the hospital location requesting the skin test.
"^DD",9000010.12,9000010.12,1205,23,0)
^^1^1^2960924^
"^DD",9000010.12,9000010.12,1205,23,1,0)
APCDALVR Variable = APCDALVR("APCDTHL")
"^DD",9000010.12,9000010.12,1205,"DT")
2940401
"^DD",9000010.12,9000010.12,1206,0)
SERVICE CREDIT STOP^P40.7'^DIC(40.7,^12;6^Q
"^DD",9000010.12,9000010.12,1206,23,0)
^^1^1^2960924^
"^DD",9000010.12,9000010.12,1206,23,1,0)
APCDALVR Variable = APCDALVR("APCDTSCS")
"^DD",9000010.12,9000010.12,1206,"DT")
2940428
"^DD",9000010.12,9000010.12,1207,0)
SECONDARY VISIT^P9000010'^AUPNVSIT(^12;7^Q
"^DD",9000010.12,9000010.12,1207,1,0)
^.1
"^DD",9000010.12,9000010.12,1207,1,1,0)
9000010.12^AS
"^DD",9000010.12,9000010.12,1207,1,1,1)
S ^AUPNVSK("AS",$E(X,1,30),DA)=""
"^DD",9000010.12,9000010.12,1207,1,1,2)
K ^AUPNVSK("AS",$E(X,1,30),DA)
"^DD",9000010.12,9000010.12,1207,1,1,"DT")
2941108
"^DD",9000010.12,9000010.12,1207,23,0)
^^1^1^2960924^
"^DD",9000010.12,9000010.12,1207,23,1,0)
APCDALVR Variable = APCDALVR("APCDTSV")
"^DD",9000010.12,9000010.12,1207,"DT")
2941108
"^DD",9000010.12,9000010.12,1208,0)
PARENT^P9000010.12'^AUPNVSK(^12;8^Q
"^DD",9000010.12,9000010.12,1208,1,0)
^.1
"^DD",9000010.12,9000010.12,1208,1,1,0)
9000010.12^APT
"^DD",9000010.12,9000010.12,1208,1,1,1)
S ^AUPNVSK("APT",$E(X,1,30),DA)=""
"^DD",9000010.12,9000010.12,1208,1,1,2)
K ^AUPNVSK("APT",$E(X,1,30),DA)
"^DD",9000010.12,9000010.12,1208,1,1,"%D",0)
^^2^2^2950323^
"^DD",9000010.12,9000010.12,1208,1,1,"%D",1,0)
This is a regular cross-reference on the PARENT field.  It is used
"^DD",9000010.12,9000010.12,1208,1,1,"%D",2,0)
by QMAN.
"^DD",9000010.12,9000010.12,1208,1,1,"DT")
2950323
"^DD",9000010.12,9000010.12,1208,23,0)
^^1^1^2960924^
"^DD",9000010.12,9000010.12,1208,23,1,0)
APCDALVR Variable = APCDALVR("APCDTPNT")
"^DD",9000010.12,9000010.12,1208,"DT")
2950323
"^DD",9000010.12,9000010.12,1209,0)
EXTERNAL KEY^F^^12;9^K:$L(X)>20!($L(X)<1) X
"^DD",9000010.12,9000010.12,1209,3)
Answer must be 1-20 characters in length.
"^DD",9000010.12,9000010.12,1209,23,0)
^^1^1^2960924^
"^DD",9000010.12,9000010.12,1209,23,1,0)
APCDALVR Variable = APCDALVR("APCDTEXK")
"^DD",9000010.12,9000010.12,1209,"DT")
2960925
"^DD",9000010.12,9000010.12,1210,0)
OUTSIDE PROVIDER NAME^F^^12;10^K:$L(X)>30!($L(X)<1) X
"^DD",9000010.12,9000010.12,1210,3)
Answer must be 1-30 characters in length.
"^DD",9000010.12,9000010.12,1210,23,0)
^^1^1^2960924^
"^DD",9000010.12,9000010.12,1210,23,1,0)
APCDALVR Variable = APCDALVR("APCDTOPR")
"^DD",9000010.12,9000010.12,1210,"DT")
2960925
"^DD",9000010.12,9000010.12,1213,0)
ANCILLARY POV^P80'^ICD9(^12;13^Q
"^DD",9000010.12,9000010.12,1213,"DT")
3031028
"^DD",9000010.12,9000010.12,1215,0)
ORDERING LOCATION^P44'^SC(^12;15^Q
"^DD",9000010.12,9000010.12,1215,"DT")
3080219
"^DD",9000010.12,9000010.12,1216,0)
DATE/TIME ENTERED^D^^12;16^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",9000010.12,9000010.12,1216,1,0)
^.1
"^DD",9000010.12,9000010.12,1216,1,1,0)
^^TRIGGER^9000010.12^1217
"^DD",9000010.12,9000010.12,1216,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^AUPNVSK(D0,12)):^(12),1:"") S X=$P(Y(1),U,17),X=X S DIU=X K Y S X=DIV I '$G(APCDVMUX) S X=DUZ X ^DD(9000010.12,1216,1,1,1.4)
"^DD",9000010.12,9000010.12,1216,1,1,1.4)
S DIH=$G(^AUPNVSK(DIV(0),12)),DIV=X S $P(^(12),U,17)=DIV,DIH=9000010.12,DIG=1217 D ^DICR
"^DD",9000010.12,9000010.12,1216,1,1,2)
Q
"^DD",9000010.12,9000010.12,1216,1,1,"CREATE VALUE")
I '$G(APCDVMUX) S X=DUZ
"^DD",9000010.12,9000010.12,1216,1,1,"DELETE VALUE")
NO EFFECT
"^DD",9000010.12,9000010.12,1216,1,1,"DT")
3120423
"^DD",9000010.12,9000010.12,1216,1,1,"FIELD")
#1217
"^DD",9000010.12,9000010.12,1216,1,2,0)
^^TRIGGER^9000010.12^1218
"^DD",9000010.12,9000010.12,1216,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^AUPNVSK(D0,12)):^(12),1:"") S X=$P(Y(1),U,18),X=X S DIU=X K Y S X=DIV I '$G(APCDVMUX) S X=$$NOW^XLFDT X ^DD(9000010.12,1216,1,2,1.4)
"^DD",9000010.12,9000010.12,1216,1,2,1.4)
S DIH=$G(^AUPNVSK(DIV(0),12)),DIV=X S $P(^(12),U,18)=DIV,DIH=9000010.12,DIG=1218 D ^DICR
"^DD",9000010.12,9000010.12,1216,1,2,2)
Q
"^DD",9000010.12,9000010.12,1216,1,2,"CREATE VALUE")
I '$G(APCDVMUX) S X=$$NOW^XLFDT
"^DD",9000010.12,9000010.12,1216,1,2,"DELETE VALUE")
NO EFFECT
"^DD",9000010.12,9000010.12,1216,1,2,"DT")
3120423
"^DD",9000010.12,9000010.12,1216,1,2,"FIELD")
#1218
"^DD",9000010.12,9000010.12,1216,"DT")
3120423
"^DD",9000010.12,9000010.12,1217,0)
ENTERED BY^P200'^VA(200,^12;17^Q
"^DD",9000010.12,9000010.12,1217,5,1,0)
9000010.12^1216^1
"^DD",9000010.12,9000010.12,1217,"DT")
3120301
"^DD",9000010.12,9000010.12,1218,0)
DATE/TIME LAST MODIFIED^D^^12;18^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",9000010.12,9000010.12,1218,1,0)
^.1
"^DD",9000010.12,9000010.12,1218,1,1,0)
^^TRIGGER^9000010.12^1219
"^DD",9000010.12,9000010.12,1218,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^AUPNVSK(D0,12)):^(12),1:"") S X=$P(Y(1),U,19),X=X S DIU=X K Y S X=DIV I '$G(APCDVMUX) S X=DUZ X ^DD(9000010.12,1218,1,1,1.4)
"^DD",9000010.12,9000010.12,1218,1,1,1.4)
S DIH=$G(^AUPNVSK(DIV(0),12)),DIV=X S $P(^(12),U,19)=DIV,DIH=9000010.12,DIG=1219 D ^DICR
"^DD",9000010.12,9000010.12,1218,1,1,2)
Q
"^DD",9000010.12,9000010.12,1218,1,1,"CREATE VALUE")
I '$G(APCDVMUX) S X=DUZ
"^DD",9000010.12,9000010.12,1218,1,1,"DELETE VALUE")
NO EFFECT
"^DD",9000010.12,9000010.12,1218,1,1,"DT")
3120423
"^DD",9000010.12,9000010.12,1218,1,1,"FIELD")
#1219
"^DD",9000010.12,9000010.12,1218,5,1,0)
9000010.12^1216^2
"^DD",9000010.12,9000010.12,1218,"DT")
3120423
"^DD",9000010.12,9000010.12,1219,0)
LAST MODIFIED BY^P200'^VA(200,^12;19^Q
"^DD",9000010.12,9000010.12,1219,5,1,0)
9000010.12^1218^1
"^DD",9000010.12,9000010.12,1219,"DT")
3120301
"^DD",9000010.12,9000010.12,80101,0)
EDITED FLAG^S^1:EDITED;^801;1^Q
"^DD",9000010.12,9000010.12,80101,3)
Answer is automatically entered by PCE filing logic.
"^DD",9000010.12,9000010.12,80101,21,0)
^^2^2^2950831^
"^DD",9000010.12,9000010.12,80101,21,1,0)
This field is automatically set to 1 if PCE detects that any original skin test
"^DD",9000010.12,9000010.12,80101,21,2,0)
data is being edited.
"^DD",9000010.12,9000010.12,80101,23,0)
^^2^2^2950831^
"^DD",9000010.12,9000010.12,80101,23,1,0)
PCE filing logic automatically compares the before and after pictures of the
"^DD",9000010.12,9000010.12,80101,23,2,0)
record to determine if the edited flag should be set to "1".
"^DD",9000010.12,9000010.12,80101,"DT")
2940401
"^DD",9000010.12,9000010.12,80102,0)
AUDIT TRAIL^F^^801;2^K:$L(X)>85!($L(X)<2) X
"^DD",9000010.12,9000010.12,80102,3)
Answer is automatically entered by the PCE filing logic.
"^DD",9000010.12,9000010.12,80102,21,0)
^^4^4^2950901^^^^
"^DD",9000010.12,9000010.12,80102,21,1,0)
This field is populated automatically be the PCE filing logic.  The formt of
"^DD",9000010.12,9000010.12,80102,21,2,0)
the field is as follows:  Pointer to PCE data source file_"-"_A for Add or E
"^DD",9000010.12,9000010.12,80102,21,3,0)
for Edit_" "_DUZ of the person who entered the data_";"...
"^DD",9000010.12,9000010.12,80102,21,4,0)
 
"^DD",9000010.12,9000010.12,80102,23,0)
^^14^14^2950901^^^
"^DD",9000010.12,9000010.12,80102,23,1,0)
The PCE filing logic requires a pointer to the PCE data source file.  If this
"^DD",9000010.12,9000010.12,80102,23,2,0)
is not passed, then PCE filing logic will not process the data.
"^DD",9000010.12,9000010.12,80102,23,3,0)
 
"^DD",9000010.12,9000010.12,80102,23,4,0)
If the record is a new record, then an "A" is used to specify the source that
"^DD",9000010.12,9000010.12,80102,23,5,0)
added the data.  If the record existed previously, PCE filing logic compares
"^DD",9000010.12,9000010.12,80102,23,6,0)
the old and new records of information.  An "E" will be automatically used if
"^DD",9000010.12,9000010.12,80102,23,7,0)
the filing logic finds the data has been edited.  If "E" is used, then the
"^DD",9000010.12,9000010.12,80102,23,8,0)
Edited Flag field is automatically set to 1.
"^DD",9000010.12,9000010.12,80102,23,9,0)
 
"^DD",9000010.12,9000010.12,80102,23,10,0)
The DUZ is stored in its internal format to represent the user who performed
"^DD",9000010.12,9000010.12,80102,23,11,0)
the adding or editing of data for this record.
"^DD",9000010.12,9000010.12,80102,23,12,0)
 
"^DD",9000010.12,9000010.12,80102,23,13,0)
Iterations of editing will be concatenated to the previous data source value,
"^DD",9000010.12,9000010.12,80102,23,14,0)
up to 85 characters.
"^DD",9000010.12,9000010.12,80102,"DT")
2960509
"^DD",9000010.12,9000010.12,81101,0)
COMMENTS^F^^811;1^K:$L(X)>245!($L(X)<1) X
"^DD",9000010.12,9000010.12,81101,3)
Enter a comment 1-245 characters in length.
"^DD",9000010.12,9000010.12,81101,21,0)
^^2^2^2950901^^
"^DD",9000010.12,9000010.12,81101,21,1,0)
This is a comment related to the patient's skin test.  The provider may enter
"^DD",9000010.12,9000010.12,81101,21,2,0)
this manually via the PCE User Interface.
"^DD",9000010.12,9000010.12,81101,"DT")
2950711
"^DD",9000010.12,9000010.12,81201,0)
VERIFIED^SI^1:ELECTRONICALLY SIGNED;2:VERIFIED BY PACKAGE;^812;1^Q
"^DD",9000010.12,9000010.12,81201,"DT")
2960509
"^DD",9000010.12,9000010.12,81202,0)
PACKAGE^P9.4'I^DIC(9.4,^812;2^Q
"^DD",9000010.12,9000010.12,81202,"DT")
2960509
"^DD",9000010.12,9000010.12,81203,0)
DATA SOURCE^P839.7'I^PX(839.7,^812;3^Q
"^DD",9000010.12,9000010.12,81203,"DT")
2960509
"^DD",9999999.28,9999999.28,0)
FIELD^^8801^5
"^DD",9999999.28,9999999.28,0,"DDA")
N
"^DD",9999999.28,9999999.28,0,"DT")
2960710
"^DD",9999999.28,9999999.28,0,"ID",.02)
W:$D(^("0")) "   ",$P(^("0"),U,2)
"^DD",9999999.28,9999999.28,0,"IX","B",9999999.28,.01)

"^DD",9999999.28,9999999.28,0,"IX","B",9999999.28,8801)

"^DD",9999999.28,9999999.28,0,"IX","C",9999999.28,.02)

"^DD",9999999.28,9999999.28,0,"NM","SKIN TEST")

"^DD",9999999.28,9999999.28,0,"PT",801.41,15)

"^DD",9999999.28,9999999.28,0,"PT",801.4118,.01)

"^DD",9999999.28,9999999.28,0,"PT",801.43,.02)

"^DD",9999999.28,9999999.28,0,"PT",810.31,.04)

"^DD",9999999.28,9999999.28,0,"PT",810.32,.01)

"^DD",9999999.28,9999999.28,0,"PT",811.1,.01)

"^DD",9999999.28,9999999.28,0,"PT",811.1,.02)

"^DD",9999999.28,9999999.28,0,"PT",811.52,.01)

"^DD",9999999.28,9999999.28,0,"PT",811.902,.01)

"^DD",9999999.28,9999999.28,0,"PT",90362.2111,.01)

"^DD",9999999.28,9999999.28,0,"PT",90362.3121,.01)

"^DD",9999999.28,9999999.28,0,"PT",9000010.12,.01)

"^DD",9999999.28,9999999.28,0,"PT",9002081,14)

"^DD",9999999.28,9999999.28,0,"PT",9009071,16)

"^DD",9999999.28,9999999.28,0,"SP",.02)
1^C
"^DD",9999999.28,9999999.28,0,"VRPK")
IMMUNIZATION
"^DD",9999999.28,9999999.28,.01,0)
NAME^RF^^0;1^K:$L(X)>10!($L(X)<3)!'(X'?1P.E)!(X'?.ANP) X
"^DD",9999999.28,9999999.28,.01,1,0)
^.1
"^DD",9999999.28,9999999.28,.01,1,1,0)
9999999.28^B
"^DD",9999999.28,9999999.28,.01,1,1,1)
S ^AUTTSK("B",$E(X,1,30),DA)=""
"^DD",9999999.28,9999999.28,.01,1,1,2)
K ^AUTTSK("B",$E(X,1,30),DA)
"^DD",9999999.28,9999999.28,.01,3)
ANSWER MUST BE 3-10 CHARACTERS IN LENGTH
"^DD",9999999.28,9999999.28,.01,"DEL",.01,0)
I 1
"^DD",9999999.28,9999999.28,.01,"DT")
2851216
"^DD",9999999.28,9999999.28,.02,0)
CODE^RFX^^0;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>2!($L(X)<2)!'(X?2N) X I $D(X),$D(^AUTTSK("C",X)),'$D(^AUTTSK("C",X,DA)) K X W:'$D(ZTQUEUED) "    Already used! "
"^DD",9999999.28,9999999.28,.02,1,0)
^.1
"^DD",9999999.28,9999999.28,.02,1,1,0)
9999999.28^C
"^DD",9999999.28,9999999.28,.02,1,1,1)
S ^AUTTSK("C",$E(X,1,30),DA)=""
"^DD",9999999.28,9999999.28,.02,1,1,2)
K ^AUTTSK("C",$E(X,1,30),DA)
"^DD",9999999.28,9999999.28,.02,3)
ANSWER MUST BE 2 CHARACTERS IN LENGTH
"^DD",9999999.28,9999999.28,.02,"DT")
2930519
"^DD",9999999.28,9999999.28,.03,0)
INACTIVE FLAG^S^1:INACTIVE;^0;3^Q
"^DD",9999999.28,9999999.28,.03,"DT")
2960710
"^DD",9999999.28,9999999.28,.11,0)
CPT CODE^P81'^ICPT(^0;11^Q
"^DD",9999999.28,9999999.28,.11,21,0)
^^1^1^2960523^
"^DD",9999999.28,9999999.28,.11,21,1,0)
Cpt associated with the skin test entry.
"^DD",9999999.28,9999999.28,.11,"DT")
2960710
"^DD",9999999.28,9999999.28,8801,0)
MNEMONIC^F^^88;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>2!($L(X)<1) X
"^DD",9999999.28,9999999.28,8801,1,0)
^.1
"^DD",9999999.28,9999999.28,8801,1,1,0)
9999999.28^B^MNEMONIC
"^DD",9999999.28,9999999.28,8801,1,1,1)
S ^AUTTSK("B",$E(X,1,30),DA)=1
"^DD",9999999.28,9999999.28,8801,1,1,2)
K ^AUTTSK("B",$E(X,1,30),DA)
"^DD",9999999.28,9999999.28,8801,3)
ANSWER MUST BE 1-2 CHARACTERS IN LENGTH
"^DD",9999999.28,9999999.28,8801,"DT")
2851216
"^DIC",9000010.12,9000010.12,0)
V SKIN TEST^9000010.12API
"^DIC",9000010.12,9000010.12,0,"GL")
^AUPNVSK(
"^DIC",9000010.12,9000010.12,"%D",0)
^^16^16^2950901^^
"^DIC",9000010.12,9000010.12,"%D",1,0)
This file has been designed for joint use by the Indian Health Service and
"^DIC",9000010.12,9000010.12,"%D",2,0)
the Department of Veteran Affairs. There will be one record for each type
"^DIC",9000010.12,9000010.12,"%D",3,0)
of skin test given to a patient on a given visit.  Data must exist for a
"^DIC",9000010.12,9000010.12,"%D",4,0)
patient and a visit before data can be entered here.  The record is
"^DIC",9000010.12,9000010.12,"%D",5,0)
normally created when a skin test is given, and the results, if available,
"^DIC",9000010.12,9000010.12,"%D",6,0)
are entered at a later date and matched to the original record.  If
"^DIC",9000010.12,9000010.12,"%D",7,0)
results are entered and a skin test given does not exist, a new record is
"^DIC",9000010.12,9000010.12,"%D",8,0)
created.
"^DIC",9000010.12,9000010.12,"%D",9,0)
 
"^DIC",9000010.12,9000010.12,"%D",10,0)
In the VA, If a CPT code is entered into PCE that represents a skin test,
"^DIC",9000010.12,9000010.12,"%D",11,0)
then a skin test entry will automatically be entered into the V Skin Test
"^DIC",9000010.12,9000010.12,"%D",12,0)
file.  And vice versa, if a skin test is entered into PCE that represents
"^DIC",9000010.12,9000010.12,"%D",13,0)
a CPT code, then a CPT entry will automatically be entered into the V CPT
"^DIC",9000010.12,9000010.12,"%D",14,0)
file.  This supports getting workload credit from clinical activities.
"^DIC",9000010.12,9000010.12,"%D",15,0)
The PCE Code Mapping file defines the relationships between Skin Tests and
"^DIC",9000010.12,9000010.12,"%D",16,0)
CPT codes.
"^DIC",9000010.12,"B","V SKIN TEST",9000010.12)

"^DIC",9999999.28,9999999.28,0)
SKIN TEST^9999999.28I
"^DIC",9999999.28,9999999.28,0,"GL")
^AUTTSK(
"^DIC",9999999.28,9999999.28,"%D",0)
^^6^6^3010404^^
"^DIC",9999999.28,9999999.28,"%D",1,0)
Changes to this data dictionary should be coordinated thru the IHS DBA.
"^DIC",9999999.28,9999999.28,"%D",2,0)
 
"^DIC",9999999.28,9999999.28,"%D",3,0)
This file contains Skin Tests and their associated codes developed by the
"^DIC",9999999.28,9999999.28,"%D",4,0)
IHS.  It consists of a full descriptive name, a Ten Character Abbreviated
"^DIC",9999999.28,9999999.28,"%D",5,0)
Name for the Health Summary and other reports where spaces are limited,
"^DIC",9999999.28,9999999.28,"%D",6,0)
plus a Two Digit Code.
"^DIC",9999999.28,"B","SKIN TEST",9999999.28)

**END**
**END**
